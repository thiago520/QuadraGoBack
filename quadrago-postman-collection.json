{
  "info": {
    "_postman_id": "8eda2d73-5e49-4a75-89bd-35ad679a5e81",
    "name": "QuadraGo API (Atualizada)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth - Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"email\": \"admin@quadrago.com\", \"password\": \"admin\"}"
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "auth",
            "login"
          ]
        },
        "auth": {
          "type": "noauth"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// Salva jwt_token quando 200 OK",
              "if (pm.response.code === 200) {",
              "  let b = {};",
              "  try { b = pm.response.json(); } catch(e) {}",
              "  if (b && b.token) {",
              "    pm.environment.set('jwt_token', b.token);",
              "  } else {",
              "    pm.environment.unset('jwt_token');",
              "  }",
              "} else {",
              "  pm.environment.unset('jwt_token');",
              "}",
              "",
              "pm.test('Login retorna 200 OK', function () {",
              "  pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Actuator - Health (Basic)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Basic YWRtaW46YWRtaW4="
          }
        ],
        "url": {
          "raw": "{{base_url}}/actuator/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "actuator",
            "health"
          ]
        }
      }
    },
    {
      "name": "Teachers - Listar",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/teachers",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "teachers"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status é 200 (OK) para /teachers', function () {",
              "  pm.expect(pm.response.code).to.eql(200);",
              "});",
              "",
              "if (pm.response.code !== 200) {",
              "  console.log('Status:', pm.response.code);",
              "  console.log('WWW-Authenticate:', pm.response.headers.get('WWW-Authenticate'));",
              "  console.log('Body:', pm.response.text());",
              "  return;",
              "}",
              "",
              "let raw = pm.response.text();",
              "let json = null;",
              "try { json = JSON.parse(raw); } catch(e) {}",
              "pm.test('Resposta é JSON', function () {",
              "  pm.expect(json).to.be.an('object').or.to.be.an('array');",
              "});",
              "let list = Array.isArray(json) ? json : (json && Array.isArray(json.content) ? json.content : []);",
              "pm.environment.set('teachers_count', list.length.toString());",
              "if (list.length > 0) { pm.environment.set('teacher_id', list[0].id); }"
            ]
          }
        }
      ]
    },
    {
      "name": "Teachers - Criar",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Jo\\u00e3o da Silva\", \"phone\": \"+55 11 91234-5678\", \"nationalId\": \"12345678909\"}"
        },
        "url": {
          "raw": "{{base_url}}/teachers",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "teachers"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status 201 ou 200', function () {",
              "  pm.expect([200,201]).to.include(pm.response.code);",
              "});",
              "let body=null; try{ body=pm.response.json(); }catch(e){}",
              "if (body && (typeof body==='object')) {",
              "  const id = body.id ?? body?.data?.id;",
              "  if (id!=null){ pm.environment.set('teacher_id', id); }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "Teachers - Atualizar",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"name\": \"Jo\\u00e3o da Silva (Atualizado)\", \"phone\": \"+55 11 98888-7777\", \"nationalId\": \"12345678909\"}"
        },
        "url": {
          "raw": "{{base_url}}/teachers/{{teacher_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "teachers",
            "{{teacher_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status 200 (Atualizado)', function () {",
              "  pm.expect(pm.response.code).to.eql(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Teachers - Remover",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/teachers/{{teacher_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "teachers",
            "{{teacher_id}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status 204 (Removido) ou 200', function () {",
              "  pm.expect([200,204]).to.include(pm.response.code);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "noauth"
  }
}