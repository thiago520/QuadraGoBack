# application.properties (CORRIGIDO)

# ========== BANCO DE DADOS ==========
spring.datasource.url=jdbc:postgresql://postgres:5432/quadrago
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# ========== JPA ==========
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ========== USUÁRIO PADRÃO (Para Basic Auth nos seus endpoints, se necessário) ==========
spring.security.user.name=admin
spring.security.user.password=admin

# ========== SERVIDOR ==========
server.address=0.0.0.0

# ========== ACTUATOR ==========
spring.application.name=quadrago-api
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# ========== SPRING BOOT ADMIN (CONFIGURAÇÃO DE CLIENTE) ==========
# REMOVIDO: spring.boot.admin.server.enabled=true
# URL para o novo contêiner do Admin Server (comunicação interna do Docker)
spring.boot.admin.client.url=http://admin-server:8080

# URL que o Admin Server usará para acessar sua API (comunicação interna do Docker)
spring.boot.admin.client.instance.management-url=http://backend:8080/actuator
spring.boot.admin.client.instance.health-url=http://backend:8080/actuator/health
spring.boot.admin.client.instance.service-url=http://backend:8080

# Credenciais que o cliente usará para se registrar no servidor (devem bater com as do admin-server)
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
logging.level.de.codecentric.boot.admin.client.registration=DEBUG

# ========== JWT ==========
# 256 bits em Base64 (exemplo)
jwt.secret=4a0f1m0WmC3o8Q2E1S8JmRL7+SxGQ4y7F7z7c7q9pKk=
jwt.expiration=86400000
